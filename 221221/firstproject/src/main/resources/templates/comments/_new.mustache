<div id="comments-list" class="m-1">
	<div id="comments-new" class="card m-2">
		<div class="card-header">
			댓글쓰기
		</div>
		<div class="card-body">
			<!-- 댓글 작성 폼 -->
			<form>
				<!-- 닉네임 입력 -->
				<div class="mb-3">
					<label for="new-comment-nickname" class="form-label">닉네임</label>
					<input id="new-comment-nickname" class="form-control">
				</div>
				
				<!-- 댓글 입력 -->
				<div class="mb-3">
					<label for="new-comment-body" class="form-label">댓글</label>
					<textarea id="new-comment-body" class="form-control" rows="5" style="resize: none;"></textarea>
				</div>
				
				<!-- 작성하는 댓글이 어떤 메인글의 댓글인가 저장하기 위해 메인글의 id를 히든으로 전달한다. -->
				{{#article}}
				<input type="hidden" id="new-comment-article-id" value="{{id}}">
				{{/article}}
				
				<button id="comment-create-btn" class="btn btn-outline-dark" type="button">댓글저장</button>
			</form>
		</div>
	</div>
</div>

<script type="text/javascript">
{
	// 전송 버튼을 선택해서 click 이벤트를 걸어준다.
	const commentCreateBtn = document.querySelector('#comment-create-btn');
	//console.log(commentCreateBtn);
	
	// addEventListener('이벤트', 실행할 함수)
	commentCreateBtn.addEventListener('click', function() {
		//console.log("버튼이 클릭되었습니다");
		
		// 새 댓글 객체를 생성한다.
		const comment = {
				nickname: document.querySelector('#new-comment-nickname').value,
				body: document.querySelector('#new-comment-body').value,
				article_id: document.querySelector('#new-comment-article-id').value
		};
		// 댓글 객체 출력
		//console.log(comment);
		
		// fetch Ajax를 이용해서 Rest APO를 호출한다.
		//@PostMapping("/api/comments/{articleId}/comments")
		const url = '/api/comments/' + comment.article_id + '/comments';
		console.log(url);
		
		fetch(url, {
			method: "POST", // post 요청
			body: JSON.stringify(comment), // 자바스크립트 객체
			headers: {
				'Content-Type': 'application/json'
			}
		}).then(function (response) {
			//console.log(response)
			// http 응답 코드에따른 메시지 출력
			const msg = response.ok ? '댓글이 등록되었습니다.' : ' 댓글 등록 실패!';
			alert(msg);
			// 현재 페이지를 새로고침한다.
			location.reload();
		});
	});
}
</script>